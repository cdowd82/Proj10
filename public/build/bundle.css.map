{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { FirebaseApp, User, Doc, Collection } from \"sveltefire\";\n\n    import firebase from \"firebase/app\";\n    import \"firebase/firestore\";\n    import \"firebase/auth\";\n    import \"firebase/performance\";\n    import \"firebase/analytics\";\n\n    const firebaseConfig = {\n      apiKey: \"AIzaSyAUb9voHyaLgmuTM-FlUnHKQ28XYnRxiRU\",\n      authDomain: \"proj10-362f0.firebaseapp.com\",\n      projectId: \"proj10-362f0\",\n      storageBucket: \"proj10-362f0.appspot.com\",\n      messagingSenderId: \"1094096035873\",\n      appId: \"1:1094096035873:web:2042e0ea11ae3d6e81c360\",\n      measurementId: \"G-RNFPBWS5SM\"\n    };\n\n    let email = '';\n    let password = '';\n\n    function signIn() {\n        firebase.auth().signInWithEmailAndPassword(email, password).then((user) => {\n            // Signed in \n            // ...\n        })\n        .catch((error) => {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n        });\n    }\n\n    function signOut() {\n        firebase.auth().signOut().then(() => {\n            // Sign-out successful.\n        }).catch((error) => {\n            // An error happened.\n    });\n\n    }\n\n    firebase.initializeApp(firebaseConfig);\n</script>\n\n<main>\n\n  {#if !firebaseConfig.projectId}\n    <strong>Step 0</strong>\n    Create a\n    <a href=\"https://firebase.google.com/\">Firebase Project</a>\n    and paste your web config into\n    <code>App.svelte</code>\n    .\n  {/if}\n\n  <!-- 1. ðŸ”¥ Firebase App -->\n  <FirebaseApp {firebase}>\n\n    <h1>Liverpool TAViTRAK</h1>\n\n    <!-- 2. ðŸ˜€ Get the current user -->\n    <User let:user let:auth>\n      Signed in as: \n      <em>{user.email}</em>\n\n      <button on:click={() => auth.signOut()}>Sign Out</button>\n\n      <div slot=\"signed-out\">\n\n            <input type=\"text\" bind:value={email} placeholder=\"Email\">\n            <br>\n            <input type=\"password\" bind:value={password} placeholder=\"Password\">\n            <br>\n            <button on:click={signIn}>Login</button>\n\n        <!--\n        <button on:click={() => auth.signInAnonymously()}>\n          Sign In Anonymously\n        </button>\n        -->\n      </div>\n\n      <hr />\n\n      <!-- 3. ðŸ“œ Get a Firestore document owned by a user -->\n      <Doc path={`posts/${user.uid}`} let:data={post} let:ref={postRef} log>\n\n        <h2>{post.title}</h2>\n\n        <p>\n          Document\n          created at <em>{new Date(post.createdAt).toLocaleString()}</em>\n        </p>\n\n        <span slot=\"loading\">Loading post...</span>\n        <span slot=\"fallback\">\n          <button\n            on:click={() => postRef.set({\n                title: 'ðŸ“œ I like Svelte',\n                createdAt: Date.now()\n              })}>\n            Create Document\n          </button>\n        </span>\n\n        <!-- 4. ðŸ’¬ Get all the comments in its subcollection -->\n\n        <h3>Comments</h3>\n        <Collection\n          path={postRef.collection('comments')}\n          query={ref => ref.orderBy('createdAt')}\n          let:data={comments}\n          let:ref={commentsRef}\n          log>\n\n          {#if !comments.length}\n              No comments yet...\n          {/if}\n\n          {#each comments as comment}\n            <p>\n              <!-- ID: <em>{comment.ref.id}</em> -->\n            </p>\n            <p>\n              {comment.text}\n              <button on:click={() => comment.ref.delete()}>Delete</button>\n            </p>\n          {/each}\n\n\n          <button\n            on:click={() => commentsRef.add({\n                text: 'ðŸ’¬ Me too!',\n                createdAt: Date.now()\n              })}>\n            Add Comment\n          </button>\n\n          <span slot=\"loading\">Loading comments...</span>\n\n        </Collection>\n      </Doc>\n    </User>\n  </FirebaseApp>\n\n</main>\n\n\n<!-- Styles -->\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1,\n  em {\n    color: #ff3e00;\n  }\n\n  hr {\n    height: 1px;\n    border: none;\n    background: rgb(195, 195, 195);\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>"
  ],
  "names": [],
  "mappings": "AAuJE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,iBAAE,CACF,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAChC,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC"
}